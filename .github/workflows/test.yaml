name: Test

on:
  push:
    branches:
      - main 
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          # Issue ref: https://github.com/actions/setup-python/issues/436
          # cache: "pip"
          cache-dependency-path: pyproject.toml
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test-v03
      - name: Install pipx
        run: python -m pip install --user pipx
      - name: Install Poetry
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pipx ensurepath
          pipx install poetry
      - name: Install dependencies
        run: poetry install
    #   - name: Lint
    #     run: bash scripts/lint.sh
    #   - run: mkdir coverage
      - name: Test
        # run: bash scripts/test.sh
        run: poetry run pytest
        # env:
        #   COVERAGE_FILE: coverage/.coverage.${{ runner.os }}-py${{ matrix.python-version }}
        #   CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}